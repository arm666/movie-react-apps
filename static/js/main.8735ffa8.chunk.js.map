{"version":3,"sources":["components/sidebar/Sidebar.js","components/hooks/getGenre.js","components/MovieCard.js","components/hooks/getMovies.js","components/moviebar/HomeMovieBar.js","components/navbar/NavBar.js","components/Combine.js","components/hooks/getEachMovie.js","components/moviebar/MovieDetail.js","components/moviebar/EachMovie.js","components/search/SearchedMovie.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","setMenu","menus","title","url","changeActiveMenu","index","allMenus","document","querySelectorAll","forEach","val","classList","remove","add","useEffect","className","map","onClick","key","genre_ids","genre_names","useGetGenre","genresList","useState","genres","setGenres","genre","includes","indexOf","substr","MovieCard","details","vote_average","src","poster_path","alt","original_title","useGetMovies","query","movieList","setMovieList","getMovie","path","Axios","get","then","res","data","results","catch","err","console","log","HomeMovieBar","length","to","id","style","textDecoration","color","NavBar","inputHandle","setInputHandle","onKeyDown","e","keyCode","querySelector","click","placeholder","value","onChange","target","Combine","menu","useGetEachMovie","eachMovie","setEachMovie","MovieDetail","movieId","window","scrollTo","backdrop_path","release_date","name","runtime","spoken_languages","production_companies","production_countries","overview","EachMovie","match","params","SearchedMovie","background","App","exact","component","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8735ffa8.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction Sidebar({ setMenu }) {\r\n  // list of menus\r\n  const menus = [\r\n    { title: \"Now Playing\", url: \"/movie/now_playing\" },\r\n    { title: \"Trending\", url: \"/trending/movie/day\" },\r\n    { title: \"Popular\", url: \"/movie/popular\" },\r\n    { title: \"Top Rated\", url: \"/movie/top_rated\" },\r\n    { title: \"Upcoming\", url: \"/movie/upcoming\" },\r\n    { title: \"Discover\", url: \"/discover/movie\" },\r\n  ];\r\n\r\n  // is called when menu is selected\r\n  const changeActiveMenu = (index) => {\r\n    // removes menuactive class for all\r\n    const allMenus = document.querySelectorAll(\".menu\");\r\n    allMenus.forEach((val) => val.classList.remove(\"menuActive\"));\r\n    // adds menuActive class for selected\r\n    allMenus[index].classList.add(\"menuActive\");\r\n    // changes the menu url\r\n    setMenu(menus[index].url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // adds menuActive for first index\r\n    changeActiveMenu(0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"menus\">\r\n      {/* displaying menus */}\r\n      <div className=\"appTitle\">MovieApp</div>\r\n      {menus.map((val, index) => (\r\n        <div\r\n          onClick={() => changeActiveMenu(index)}\r\n          className=\"menu\"\r\n          key={\"menu\" + index}\r\n        >\r\n          <div className=\"title\">{val.title}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { useEffect, useState } from \"react\";\r\nconst genre_ids = [\r\n  28,\r\n  12,\r\n  16,\r\n  35,\r\n  80,\r\n  99,\r\n  18,\r\n  10751,\r\n  14,\r\n  36,\r\n  27,\r\n  10402,\r\n  9648,\r\n  10749,\r\n  878,\r\n  10770,\r\n  53,\r\n  10752,\r\n  37,\r\n];\r\nconst genre_names = [\r\n  \"Action\",\r\n  \"Adventure\",\r\n  \"Animation\",\r\n  \"Comedy\",\r\n  \"Crime\",\r\n  \"Documentary\",\r\n  \"Drama\",\r\n  \"Family\",\r\n  \"Fantasy\",\r\n  \"History\",\r\n  \"Horror\",\r\n  \"Music\",\r\n  \"Mystery\",\r\n  \"Romance\",\r\n  \"Science Fiction\",\r\n  \"TV Movie\",\r\n  \"Thriller\",\r\n  \"War\",\r\n  \"Western\",\r\n];\r\nfunction useGetGenre(genresList) {\r\n  const [genres, setGenres] = useState(\"\");\r\n  useEffect(() => {\r\n    var genre = \"\";\r\n    genresList.map((val) => {\r\n      genre_ids.includes(val) &&\r\n        (genre += \", \" + genre_names[genre_ids.indexOf(val)]);\r\n    });\r\n    setGenres(genre);\r\n  }, [genres]);\r\n  return genres.substr(1);\r\n}\r\n\r\nexport default useGetGenre;\r\n","import React from \"react\";\r\nimport useGetGenre from \"./hooks/getGenre\";\r\n\r\nfunction MovieCard({ details }) {\r\n  return (\r\n    <div className=\"movieCard\">\r\n      <div className=\"vote_average\">{details.vote_average}</div>\r\n      <div className=\"posterImg\">\r\n        <img src={\"https://image.tmdb.org/t/p/w500/\" + details.poster_path}  alt=\"poster\" />\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"title\">{details.original_title}</div>\r\n        <div className=\"genres\">{useGetGenre(details.genre_ids)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction useGetMovies(url, query) {\r\n  //stores movies\r\n  const [movieList, setMovieList] = useState([]);\r\n  // calls api when url changes\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, [url, query]);\r\n\r\n  // api call using axios\r\n  const getMovie = () => {\r\n    // api path\r\n    const path =\r\n      \"http://api.themoviedb.org/3\" +\r\n      url +\r\n      \"?api_key=85b891d38491973c0dff31bd631036b3&\" +\r\n      query;\r\n    // api call using axios\r\n    Axios.get(path)\r\n      .then((res) => {\r\n        setMovieList(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return { movieList };\r\n}\r\n\r\nexport default useGetMovies;\r\n","import React from \"react\";\r\nimport \"./moviebar.css\";\r\nimport MovieCard from \"./../MovieCard\";\r\nimport useGetMovies from \"./../hooks/getMovies\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction HomeMovieBar({ url, query }) {\r\n  // stores movies\r\n  const { movieList } = useGetMovies(url, query);\r\n  return (\r\n    <div className=\"moviesList\">\r\n      {movieList !== \"undefined\" && movieList.length > 0 ? (\r\n        movieList.map((val, index) => (\r\n          <NavLink\r\n            to={\"/movie-react-apps/movie/\" + val.id}\r\n            key={\"movieCard\" + index}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <MovieCard details={val} />\r\n          </NavLink>\r\n        ))\r\n      ) : (\r\n        <div style={{ color: \"white\" }}>\"No Simiar Movies Found.\" </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeMovieBar;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\nfunction NavBar() {\r\n  const [inputHandle, setInputHandle] = useState(\"\");\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.keyCode === 13 && inputHandle.length > 0) {\r\n      document.querySelector(\".btnSearch\").click();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"navbars\">\r\n      <ul>\r\n        <li className=\"items appName\">\r\n          <Link to=\"/movie-react-apps\" className=\"title\">\r\n            Movie App\r\n          </Link>\r\n        </li>\r\n        <li className=\"items searchBox\">\r\n          <input\r\n            onKeyDown={handleKeyDown}\r\n            className=\"movieInput\"\r\n            placeholder=\"Search ..\"\r\n            value={inputHandle}\r\n            onChange={(e) => setInputHandle(e.target.value)}\r\n          />\r\n          {inputHandle.length > 0 ? (\r\n            <Link to={\"/movie-react-apps/search/\" + inputHandle}>\r\n              <button className=\"btnSearch\"> Search</button>\r\n            </Link>\r\n          ) : (\r\n            <button className=\"btnSearch\" > Search</button>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport HomeMovieBar from \"./moviebar/HomeMovieBar\";\r\nimport NavBar from \"./navbar/NavBar\";\r\n\r\nfunction Combine() {\r\n  // var for menu to show\r\n  const [menu, setMenu] = useState(\"/movie/now_playing\");\r\n  useEffect(() => {\r\n    // console.log(menu);\r\n  }, [menu]);\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"pages sideBar\">\r\n        {/* left side bar containing menus */}\r\n        <Sidebar setMenu={setMenu} />\r\n      </div>\r\n      <div className=\"pages homeMovieBar\">\r\n        <NavBar />\r\n        {/* main movie bar for homepage */}\r\n        <HomeMovieBar url={menu} query=\" \" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Combine;\r\n","import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction useGetEachMovie(id) {\r\n  const [eachMovie, setEachMovie] = useState(\"\");\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, [id]);\r\n  const getMovie = () => {\r\n    const path =\r\n      \"https://api.themoviedb.org/3/movie/\" +\r\n      id +\r\n      \"?api_key=85b891d38491973c0dff31bd631036b3\";\r\n\r\n    Axios.get(path)\r\n      .then((res) => {\r\n        setEachMovie(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return { eachMovie };\r\n}\r\n\r\nexport default useGetEachMovie;\r\n","import React, { useEffect } from \"react\";\r\nimport useGetEachMovie from \"./../hooks/getEachMovie\";\r\n\r\nfunction MovieDetail({ movieId }) {\r\n  const { eachMovie } = useGetEachMovie(movieId);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [eachMovie]);\r\n  return (\r\n    <div className=\"selectdMovie\">\r\n      {eachMovie !== \"\" && (\r\n        <div>\r\n          <div className=\"eachMBackImg\">\r\n            <img\r\n              src={\"https://image.tmdb.org/t/p/w500/\" + eachMovie.backdrop_path}\r\n            />\r\n          </div>\r\n          <div className=\"posterAndInfo\">\r\n            <div className=\"poster\">\r\n              <div className=\"img\">\r\n                <img\r\n                  src={\r\n                    \"https://image.tmdb.org/t/p/w500/\" + eachMovie.poster_path\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"info\">\r\n              <div className=\"Title\">{eachMovie.original_title}</div>\r\n              <div className=\"YearAndGenre\">\r\n                <div className=\"Year\">{eachMovie.release_date}</div>\r\n                <div className=\"Genre\">\r\n                  {eachMovie.genres.map(\r\n                    (val, index) =>\r\n                      val.name +\r\n                      (index !== eachMovie.genres.length - 1 ? \" / \" : \"\")\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"Rating\">{eachMovie.vote_average}</div>\r\n              <div className=\"TimeAndLang\">\r\n                <div className=\"Time\">{eachMovie.runtime} </div>\r\n                <div className=\"Lang\">\r\n                  {eachMovie.spoken_languages.map(\r\n                    (val, index) =>\r\n                      val.name +\r\n                      (index !== eachMovie.spoken_languages.length - 1\r\n                        ? \" , \"\r\n                        : \"\")\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"ProductionCompany\">\r\n                <div className=\"title\">Production Companies</div>\r\n                {eachMovie.production_companies.map(\r\n                  (val, index) =>\r\n                    val.name +\r\n                    (index !== eachMovie.production_companies.length - 1\r\n                      ? \" / \"\r\n                      : \"\")\r\n                )}\r\n              </div>\r\n              <div className=\"ProductionCountry\">\r\n                <div className=\"title\">Production Countries</div>\r\n                {eachMovie.production_countries.map(\r\n                  (val, index) =>\r\n                    val.name +\r\n                    (index !== eachMovie.production_countries.length - 1\r\n                      ? \" / \"\r\n                      : \"\")\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"overview\">\r\n            <div className=\"title\">Overview</div>\r\n            <div className=\"content\">{eachMovie.overview}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n\r\n// https://api.themoviedb.org/3/movie/337401/images?api_key=85b891d38491973c0dff31bd631036b3\r\n","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport \"./eachMovie.css\";\r\nimport HomeMovieBar from \"./HomeMovieBar\";\r\nimport MovieDetail from \"./MovieDetail\";\r\nimport NavBar from \"./../navbar/NavBar\";\r\nfunction EachMovie(match) {\r\n  return (\r\n    <div className=\"eachMovie\">\r\n      <NavBar />\r\n      <MovieDetail movieId={match.match.params.id} />\r\n      <div className=\"similarMovies\">\r\n        <div className=\"similarMovieTitle\">Similar Movies</div>\r\n        {/* <HomeMovieBar url={\"/movie/\" + match.match.params.id + \"/similar\"} /> */}\r\n        <HomeMovieBar url={\"/movie/\" + match.match.params.id + \"/similar\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachMovie;\r\n\r\n// https://api.themoviedb.org/3/movie/337401?api_key=85b891d38491973c0dff31bd631036b3\r\n// https://api.themoviedb.org/3/movie/now_playing?api_key=85b891d38491973c0dff31bd631036b3\r\n","import React from \"react\";\r\nimport NavBar from \"./../navbar/NavBar\";\r\nimport HomeMovieBar from \"./../moviebar/HomeMovieBar\";\r\n\r\nfunction SearchedMovie(match) {\r\n  return (\r\n    <div style={{ background: \"#222\" }}>\r\n      <NavBar />\r\n      <div>\r\n        <div></div>\r\n      </div>\r\n      <HomeMovieBar\r\n        url=\"/search/movie\"\r\n        query={\"query=\" + match.match.params.query}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchedMovie;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Combine from \"./components/Combine\";\nimport EachMovie from \"./components/moviebar/EachMovie\";\nimport SearchedMovie from \"./components/search/SearchedMovie\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Combine}></Route>\n          <Route exact path=\"/movie-react-apps\" component={Combine}></Route>\n          <Route exact path=\"/movie-react-apps/\" component={Combine}></Route>\n          <Route\n            path=\"/movie-react-apps/movie/:id\"\n            component={EachMovie}\n          ></Route>\n          <Route\n            path=\"/movie-react-apps/search/:query\"\n            component={SearchedMovie}\n          ></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}